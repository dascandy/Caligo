#include <catch2/catch_all.hpp>
#include <caligo/ghash.h>
#include <array>

namespace Caligo {

TEST_CASE("ghash test vector", "[GHASH]") {
  std::array<uint8_t, 16> a2 = { 0x95, 0x2b, 0x2a, 0x56, 0xa5, 0x60, 0x4a, 0xc0, 0xb3, 0x2b, 0x66, 0x56, 0xa0, 0x5b, 0x40, 0xb6 };
  std::array<uint8_t, 16> b2 = { 0xdf, 0xa6, 0xbf, 0x4d, 0xed, 0x81, 0xdb, 0x03, 0xff, 0xca, 0xff, 0x95, 0xf8, 0x30, 0xf0, 0x61 };
  std::array<uint8_t, 16> c2 = { 0xda, 0x53, 0xeb, 0x0a, 0xd2, 0xc5, 0x5b, 0xb6, 0x4f, 0xc4, 0x80, 0x2c, 0xc3, 0xfe, 0xda, 0x60 };
  __m128i res2 = galoisMultiply(reflect(_mm_loadu_si128((__m128i*)a2.data())), reflect(_mm_loadu_si128((__m128i*)b2.data())));
  std::array<uint8_t, 16> d2;
  _mm_storeu_si128((__m128i*)d2.data(), reflect(res2));
  REQUIRE(d2 == c2);
}

}

